{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "6502/65816 Assembly",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#punctuation"
		},
		{
			"include": "#literals"
		},
		{
			"include": "#strings"
		},		
		{
			"include": "#chars"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#opcodes"
		},
		{
			"include": "#pseudovars"
		},
		{
			"include": "#pseudofunctions"
		},
		{
			"include": "#controlcommands"
		},
		{
			"include": "#blockstarts"
		},
		{
			"include": "#blockends"
		},
		{
			"include": "#labels"
		}
	],
	"repository": {
		"comments": {
			"patterns": [{
				"name": "comment.line.ca65",
				"match": ";.*$"
			},
			{
				"name": "comment.block.ca65",
				"begin": "\\/\\*",
				"end": "\\*\\/"
			}]
		},
		"punctuation": {
			"patterns": [{
				"name": "punctuation.parenthesis.ca65",
				"match": "\\(|\\)"
			}, {
				"name": "punctuation.separator.ca65",
				"match": ","
			}]
		},
		"literals": {
			"patterns": [{
				"name": "constant.numeric.binary.ca65",
				"match": "%[01]+\\b"	
			}, {
				"name": "constant.numeric.hex.ca65",
				"match": "(\\$[0-9A-Fa-f]+\\b)|\\b([0-9A-Fa-f]+h\\b)"
			}, {
				"name": "constant.numeric.decimal.ca65",
				"match": "\\b[0-9]+\\b"
			}, {
				"name": "constant.language.unnamed-label.ca65",
				"match": ":-+|:\\++"
			}]
		},		
		"strings": {
			"name": "string.quoted.double.ca65",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape.ca65",
				"match": "\\\\."
			}]
		},
		"chars": {
			"patterns": [{
				"name": "string.quoted.single.ca65",
				"match": "'.'"
			}]
		},
		"operators": {
			"patterns": [{
				"name": "keyword.operators.immediate.ca65",
				"match": "#"
			}, {
				"name": "keyword.operators.word.ca65",
				"match": "\\.(?i:mod|bitnot|bitand|bitor|shl|shr|and|or|not|xor)\\b"
			}, {
				"name": "keyword.operators.misc.ca65",
				"match": "=|<>|:=|\\+|-|\\*|/|\\&|~|\\||<<|>>|\\&\\&|\\|\\||!|<|>|<=|>="	
			}]
		},
		"opcodes": {
			"patterns": [{
				"comment": "6502 Load/Store Opcodes",
				"name": "keyword.other.opcode.ca65.6502.loadstore",
				"match": "\\b(?i:lda|sta|ldx|stx|ldy|sty)\\b"
			}, {
				"comment": "6502 Transfer Opcodes",
				"name": "keyword.other.opcode.ca65.6502.transfer",
				"match": "\\b(?i:tax|txa|tay|tya)\\b"
			}, {
				"comment": "6502 Arithmetic Opcodes",
				"name": "keyword.other.opcode.ca65.6502.arithmetic",
				"match": "\\b(?:adc|sbc|inc|dec|inx|dex|iny|dey)\\b"
			}, {
				"comment": "6502 Logic Opcodes",
				"name": "keyword.other.opcode.ca65.6502.logic",
				"match": "\\b(?:and|ora|eor|bit)\\b"
			}, {
				"comment": "6502 Shift/Rotate Opcodes",
				"name": "keyword.other.opcode.ca65.6502.shiftrotate",
				"match": "\\b(?:asl|lsr|rol|ror)\\b"
			}, {
				"comment": "6502 Compare Opcodes",
				"name": "keyword.other.opcode.ca65.6502.compare",
				"match": "\\b(?:cmp|cpx|cpy)\\b"
			}, {
				"comment": "6502 Branch Opcodes",
				"name": "keyword.other.opcode.ca65.6502.branch",
				"match": "\\b(?:bcc|bcs|beq|bne|bpl|bmi|bvc|bvs)\\b"
			}, {
				"comment": "6502 Jump/Subroutine Opcodes",
				"name": "keyword.other.opcode.ca65.6502.jump",
				"match": "\\b(?:jmp|jsr|rts|brk|rti)\\b"
			}, {
				"comment": "6502 Stack Opcodes",
				"name": "keyword.other.opcode.ca65.6502.stack",
				"match": "\\b(?:pha|pla|php|plp|txs|tsx)\\b"
			}, {
				"comment": "6502 Flags Opcodes",
				"name": "keyword.other.opcode.ca65.6502.flags",
				"match": "\\b(?:clc|sec|cli|sei|cld|sed|clv)\\b"
			}, {
				"comment": "6502 Miscellaneous Opcodes",
				"name": "keyword.other.opcode.ca65.6502.misc",
				"match": "\\b(?:nop)\\b"
			}, {
				"comment": "Macro Directives",
				"name": "keyword.control.block.macro.ca65",
				"match": "\\b(?:\\.macro|\\.endmacro)\\b"
			}, {
				"comment": "Macro Function Names",
				"name": "entity.name.function.preprocessor.ca65",
				"match": "(?<=\\.macro\\s+)\\w+"
			}, {
				"comment": "Variables Definition in Macros, insert per game project",
				"name": "variable.parameter.preprocessor.ca65",
				"match": "\\bPPU_CTRL_REG1|PPU_CTRL_REG2|PPU_STATUS|PPU_SPR_ADDR|SPR_DMA\\b"
			}, {
				"comment": "Local Label Subroutine Matching",
				"name": "entity.name.label.local.ca65",
				"match": "^(@\\w+):"
			}, {
				"comment": "Global Label Subroutine Matching",
				"name": "entity.name.label.global.ca65",
				"match": "^(\\w+):"
			}, {
				"comment": "Procedure Directives",
				"name": "entity.name.function.procedure.ca65",
				"match": "(?<=\\.(proc|macro|import|word|addr|export|segment)\\s+)\\w+"
			}, {
				"comment": "Local Label Reference Matching",
				"name": "entity.name.label.reference.local.ca65",
				"match": "(?<!\\w)(@\\w+)(?!:)"
			}, {
				"comment": "Global Label Reference Matching",
				"name": "entity.name.label.reference.global.ca65",
				"match": "(?<!\\w)(\\w+)(?!:)"
			
			}, {
				"comment": "65C02 Opcodes",
				"name": "keyword.other.opcode.ca65.65c02",
				"match": "\\b(?i:bra|phx|phy|plx|ply|stz|trb|tsb|bbr0|bbr1|bbr2|bbr3|bbr4|bbr5|bbr6|bbr7|bbs0|bbs1|bbs2|bbs3|bbs4|bbs5|bbs6|bbs7|rmb0|rmb1|rmb2|rmb3|rmb4|rmb5|rmb6|rmb7|smb0|smb1|smb2|smb3|smb4|smb5|smb6|smb7)\\b"
			}, {
				"comment": "6502X Opcodes",
				"name": "keyword.other.opcode.ca65.6502x",
				"match": "\\b(?i:alr|anc|arr|axs|dcp|isc|las|lax|rla|rra|sax|slo|sre)\\b"
			}, {
				"comment": "65816 Opcodes",
				"name": "keyword.other.opcode.ca65.65816",
				"match": "\\b(?i:brl|cop|jml|jsl|mvn|mvp|pea|pei|per|phb|phd|phk|plb|pld|rep|rtl|sep|stp|tcd|tcs|tdc|tsc|txy|tyx|wai|wdm|xba|xce)\\b"
			}, {
				"comment": "65816 Opcode Aliases",
				"name": "keyword.other.opcode.ca65.65816",
				"match": "\\b(?i:bge|blt|cpa|dea|ina|swa|tad|tas|tda|tsa)\\b"
			}]
		},
		"pseudovars": {
			"patterns": [{
				"name": "keyword.control.pseudovar.ca65",
				"match": "\\.(?i:cpu|paramcount|time|version)\\b"
			}]
		},
		"pseudofunctions": {
			"patterns": [{
				"name": "keyword.control.pseudofunction.ca65",
				"match": "\\.(?i:bankbyte|blank|concat|const|hibyte|hiword|ident|left|lobyte|loword|match|mid|ref|referenced|right|sizeof|strat|sprintf|string|strlen|tcount|xmatch)\\b"
			}]
		},
		"controlcommands": {
			"patterns": [{
				"name": "keyword.control.controlcommand.ca65",
				"match": "\\.(?i:a16|a8|addr|align|asciiz|assert|autoimport|bankbytes|bss|byt|byte|case|charmap|code|condes|constructor|data|dbyt|debuginfo|define|def|defined|definedmacro|destructor|dword|else|elseif|end|endif|endrep|endrepeat|error|exitmac|exitmacro|export|exportzp|fatal|faraddr|feature|fileopt|fopt|forceimport|global|globalzp|hibytes|i16|i8|if|ifblank|ifconst|ifdef|ifnblank|ifndef|ifnref|ifp02|ifp816|ifpc02|ifpsc02|ifref|import|importzp|incbin|include|interruptor|linecont|list|listbytes|lobytes|local|localchar|macpack|org|out|p02|p816|pagelen|pagelength|pc02|popseg|psc02|pushseg|reloc|repeat|res|rodata|segment|setcpu|smart|sunplus|tag|undef|undefine|warning|word|zeropage)\\b"
			}]
		},
		"blockstarts": {
			"patterns": [{
				"name": "keyword.control.block.ca65",
				"contentName": "entity.name.function.ca65",
				"begin": "\\.(?i:enum|macro|mac|proc|scope|struct)",
				"end": "\\b"
			}]
		},
		"blockends": {
			"patterns": [{
				"name": "keyword.control.block.ca65",
				"match": "\\.(?i:endenum|endmacro|endmac|endproc|endscope|endstruct)\\b"
			}]
		},
		"labels": {
			"patterns": [{
				"name": "entity.name.label.ca65",
				"match": "^\\s*\\S*:"
			}]
		}
	},
	"scopeName": "source.ca65"
}